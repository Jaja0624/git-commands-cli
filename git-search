#!/usr/bin/env python

import requests
import click
import re

@click.command()
@click.option('--all', is_flag=True, help='Show all commands')
@click.argument('keywords', nargs=-1)
# TODO: Add! Requires github information.
# git-search.py --add => interaction. Step 1: Command. Step 2: Description

# file_name = 'list'

def find_matches(all, keywords):
    # try get_list. if fail, try to look for existing file, if fail print error
    fetch_list()

    if (all):
        show_all()
        exit(0)

    results = search_file(keywords)

    print(''.join(str(i) for i in results)) # Avoid extra white line because each line ends with \n 

# Shows everything in file including titles
def show_all():
    with open('list') as f:
        for line in f:
            print(line)

# searches file for keyword 
# returns array with matching commands
def search_file(keywords):
    results = []
    with open('list') as f:
        for line in f: 
            if 'git' not in line:
                continue
            line_description = line.split('|')[2] # sample line: | `git status` | Check status |
            # print(line[2])
            for key in keywords:
                if re.search(key, line_description, re.IGNORECASE):
                    results.append(line)
    return results

# retrieves list of commands from github
def fetch_list():
    url = 'https://raw.githubusercontent.com/Jaja0624/Git-Commands/master/README.md'
    response = requests.get(url)
    # print(response.text) # str
    with open('list', 'wb') as f:
        f.write(response.content) # bytes

if __name__ == "__main__":
    find_matches()